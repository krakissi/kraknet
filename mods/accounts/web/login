#!/usr/bin/perl
# login
# Mike Perron (2013)
#
# A script to create sessions.

use strict;
use DBI;

my $dbh = DBI->connect('dbi:mysql:kws', 'kraknet', '') or &fail("could not access DB");

my $postdata = <STDIN>;
my %postvalues;
my $okay = 0;
my $error;
my $redir;

if(length($postdata) > 0){
	my @pairs = split(/[;&]/, $postdata);
	foreach my $pair (@pairs){
		my ($name, $value) = split(/=/, $pair);
		$value =~ s/%([a-fA-F0-9][a-fA-F0-9])/pack("C", hex($1))/eg;
		$postvalues{$name} = $value; 
		chomp($postvalues{$name});
	}
}

# Rough estimate of acceptable domain names. Probably fine.
my $domain = $postvalues{domain};
if(!($domain =~ /^[a-zA-Z0-9.-]{3,}$/)){
	$domain = "";
}

my $username = $postvalues{name};
$username =~ s/\\/\\\\/g;
$username =~ s/(["'])/\\\1/g;
$username = lc($username);

if(length($username) > 0){
#print "Name fits rules.\n";
	my $pass = $postvalues{pass};
	$pass =~ s/'/'"'"'/g;

	my $sql = qq/SELECT hash FROM users WHERE name = ?;/;
	my $sth = $dbh->prepare($sql);

	chomp(my $pwhash = qx/echo '$username$pass' | openssl sha512/);
	$pwhash =~ s/^.*\s([a-fA-F0-9]*)$/\1/g;

	$sth->execute($username);
	my @row = $sth->fetchrow_array();
	my $buffer = $row[0];

	if((length($buffer) > 0) and ($pwhash eq $buffer)){
		$okay = 1;
		$error = "Auth Accepted";
	} else {
		# Passwords no good.
		$okay = 0;
		$error = "Invalid user name or password.";
	}
} else {
	# Impossible user name.
	$okay = 0;
	$error = "Invalid user name or password.";
}

if($okay == 1){
	$redir = $postvalues{onsuccess};
	if($redir eq ""){
		$redir = "/";
	}
} else {
	$redir = $postvalues{onfailure};
	if($redir eq ""){
		$redir = $ENV{HTTP_REFERER};
		if ($redir eq ""){
			$redir = "/";
		}
	}
}

# Begin output headers
print "Status: 200 $error\n";

# Only add the session and send the cookie if auth was OK.
if($okay == 1){
	chomp(my $sid = qx/create_session '$username'/);
	if(($? == 0) and (length($sid) > 0)){
		print "Set-Cookie: knetsid=$sid; Path=/;" . ((length($domain) > 0) ? " Domain=$domain;" : "") . " Max-Age=315360000\n";
	}
}

# Output body; redirect to wherever makes sense.
print qq{Content-Type: application/json; charset=utf-8

{"redir":"$redir","error":"$error","okay":$okay}
};

# Probably superfluous
print "\n";
exit 0
